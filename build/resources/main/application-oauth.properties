# Spring Boot에서는 properties의 이름을 application-xxx.properties로 만들면 xxx라는 이름의 profile이 생성되어 이를 관리할 수 있음.

# Google Cloud Platform에 등록한 project에 대해 OAuth2 연동한 client-id와 client-secret을 명시
# Google은 Spring Security를 공식지원함 따라서 client-id와 client-secret을 registeration만 하면 됨
spring.security.oauth2.client.registration.google.client-id=382586166806-qgi2qnsnv1q2bjb3si301iaj7tgbs9e4.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=ga9TG7GYgbIWgsQDqzKggKSm
spring.security.oauth2.client.registration.google.scope=profile,email

#Naver에서는 spring security를 공식 지원하지 않음 - registration
spring.security.oauth2.client.registration.naver.client-id=3aeR_ZM75J_jzxbclRUS
spring.security.oauth2.client.registration.naver.client-secret=6lB7PXS7WI
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 기준이 되는 user_name을 response로 해야 함 -> naver 회원 조회시 반환되는 json형태 때문
spring.security.oauth2.client.provider.naver.user-name-attribute=response